@model AdminCRUD.Models.Product

@{
    ViewData["Title"] = "Edit";
}


<div class="row">
    <div class="col-md-4">
        <@*form asp-action="Edit">*@

        <form id="EditForm" asp-action="UpdateProduct" asp-controller="Product"
        data-ajax="true" data-ajax-success="CloseDetailForm();" data-ajax-update="#TR_@Model.Id">    

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}*@

<script>
    $(document).ready(function(){
        $(this).scrollTop(0);
        rebindvalidators();
    });

    function rebindvalidators(){
        var $form = $("#EditForm");
        $form.unbind();
        $form.data("validator",null);
        $.validator.unobtrusive.parse($form);
        $form.validate($form.data("unobtrusiveValidation").options);
    }
</script>